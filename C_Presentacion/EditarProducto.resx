<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="talla.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="stock.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancelarDetallePr.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>